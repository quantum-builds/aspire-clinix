generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     String
  Dentist  Dentist?
  Patient  Patient?
}

model Patient {
  id               String             @id @default(cuid())
  email            String             @unique
  address          String?
  dateOfBirth      DateTime?
  mobileNumber     String?            @unique
  name             String?
  userId           String             @unique
  appointments     Appointment[]
  user             User               @relation(fields: [userId], references: [id])
  patientTreatment PatientTreatment[]
  referrals        ReferralForm[]
  dentist          Dentist[]          @relation("PatientDentists")
}

model Dentist {
  id                String             @id @default(cuid())
  email             String             @unique
  GDCnumber         String?            @unique
  address           String?
  mobileNumber      String?
  name              String?
  specialty         String?
  userId            String             @unique
  yearsOfExperience Int?
  appointments      Appointment[]
  user              User               @relation(fields: [userId], references: [id])
  patientTreatment  PatientTreatment[]
  referrals         ReferralForm[]
  patients          Patient[]          @relation("PatientDentists")
}

model ReferralForm {
  id                    String   @id @default(cuid())
  medicalHistory        String?
  createdAt             DateTime @default(now())
  referralDetails       String[]
  treatmentDetails      String?
  DOB                   String
  address               String
  email                 String
  mobileNumber          String
  name                  String
  other                 String?
  referralAddress       String
  referralEmail         String
  referralGDC           String
  referralMobileNumber  String
  referralName          String
  treatMeantAppointment String
  dentistId             String
  patientId             String
  dentist               Dentist  @relation(fields: [dentistId], references: [id])
  patient               Patient  @relation(fields: [patientId], references: [id])

  @@unique([patientId, dentistId])
}

model Appointment {
  id                String   @id @default(cuid())
  dentistId         String
  appointmentDate   DateTime
  appointmentStatus String
  patientId         String
  dentist           Dentist  @relation(fields: [dentistId], references: [id])
  patient           Patient  @relation(fields: [patientId], references: [id])
}

model Treatment {
  id               String             @id @default(cuid())
  name             String             @unique
  description      String
  cost             Decimal            @db.Decimal(10, 2)
  patientTreatment PatientTreatment[]
}

model PatientTreatment {
  id              String    @id @default(cuid())
  dentistId       String
  patientId       String
  treatmentId     String
  treatmentDate   DateTime
  treatmentStatus String
  dentist         Dentist   @relation(fields: [dentistId], references: [id])
  patient         Patient   @relation(fields: [patientId], references: [id])
  treatment       Treatment @relation(fields: [treatmentId], references: [id])
}
